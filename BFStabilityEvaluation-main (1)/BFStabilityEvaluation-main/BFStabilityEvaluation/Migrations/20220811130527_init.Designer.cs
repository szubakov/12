// <auto-generated />
using System;
using BFStabilityEvaluation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BFStabilityEvaluation.Migrations
{
    [DbContext(typeof(PraktiContext))]
    [Migration("20220811130527_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.ComplexCriterion", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IndicatorId")
                        .HasColumnType("int");

                    b.Property<int?>("Npech")
                        .HasColumnType("int");

                    b.Property<double>("Rang")
                        .HasColumnType("float");

                    b.Property<int>("СalculatedIndicatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndicatorId");

                    b.ToTable("ComplexCriterions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IndicatorId = 3,
                            Rang = 1.0,
                            СalculatedIndicatorId = 6
                        },
                        new
                        {
                            Id = 2,
                            IndicatorId = 4,
                            Rang = 1.0,
                            СalculatedIndicatorId = 6
                        },
                        new
                        {
                            Id = 3,
                            IndicatorId = 5,
                            Rang = 1.0,
                            СalculatedIndicatorId = 6
                        },
                        new
                        {
                            Id = 4,
                            IndicatorId = 1,
                            Rang = 1.0,
                            СalculatedIndicatorId = 7
                        },
                        new
                        {
                            Id = 5,
                            IndicatorId = 2,
                            Rang = 1.0,
                            СalculatedIndicatorId = 7
                        },
                        new
                        {
                            Id = 6,
                            IndicatorId = 3,
                            Rang = 1.0,
                            СalculatedIndicatorId = 7
                        },
                        new
                        {
                            Id = 7,
                            IndicatorId = 4,
                            Rang = 1.0,
                            СalculatedIndicatorId = 7
                        },
                        new
                        {
                            Id = 8,
                            IndicatorId = 5,
                            Rang = 1.0,
                            СalculatedIndicatorId = 7
                        });
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.Indicator", b =>
                {
                    b.Property<int>("IndicatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("LimitDanger")
                        .HasColumnType("float");

                    b.Property<double>("LimitWarning")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("IndicatorId");

                    b.ToTable("Indicators");

                    b.HasData(
                        new
                        {
                            IndicatorId = 1,
                            Alias = "TEIM",
                            LimitDanger = 0.0,
                            LimitWarning = 0.0,
                            Name = "Технико-экономические показатели плавки",
                            Order = 1,
                            Type = 1
                        },
                        new
                        {
                            IndicatorId = 2,
                            Alias = "Properties of raw materials",
                            LimitDanger = 0.0,
                            LimitWarning = 0.0,
                            Name = "Свойства сырья",
                            Order = 2,
                            Type = 1
                        },
                        new
                        {
                            IndicatorId = 3,
                            Alias = "GazDinMode",
                            LimitDanger = 0.0,
                            LimitWarning = 0.0,
                            Name = "Дутьевой и газодинамический режим",
                            Order = 3,
                            Type = 1
                        },
                        new
                        {
                            IndicatorId = 4,
                            Alias = "ThermalMode",
                            LimitDanger = 0.0,
                            LimitWarning = 0.0,
                            Name = "Тепловой режим",
                            Order = 4,
                            Type = 1
                        },
                        new
                        {
                            IndicatorId = 5,
                            Alias = "SlagMode",
                            LimitDanger = 0.0,
                            LimitWarning = 0.0,
                            Name = "Шлаковый режим",
                            Order = 5,
                            Type = 1
                        },
                        new
                        {
                            IndicatorId = 6,
                            Alias = "IISF",
                            LimitDanger = 0.0,
                            LimitWarning = 0.0,
                            Name = "Интегральный показатель стабильности работы печи",
                            Order = 6,
                            Type = 2
                        },
                        new
                        {
                            IndicatorId = 7,
                            Alias = "",
                            LimitDanger = 0.0,
                            LimitWarning = 0.0,
                            Name = "Интегральный показатель стабильности свойств сырья и работы печи",
                            Order = 7,
                            Type = 2
                        });
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.Parameter", b =>
                {
                    b.Property<int>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Unit")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ParameterId");

                    b.ToTable("Parameters");

                    b.HasData(
                        new
                        {
                            ParameterId = 1,
                            Alias = "SpecPerformance",
                            MaxValue = 2.6000000000000001,
                            MinValue = 2.1299999999999999,
                            Name = "Удельная производительность",
                            Unit = "т/м3"
                        },
                        new
                        {
                            ParameterId = 2,
                            Alias = "Spec Сonsumption coke",
                            MaxValue = 550.0,
                            MinValue = 450.0,
                            Name = "Удельный расход кокса",
                            Unit = "кг/т чугуна"
                        },
                        new
                        {
                            ParameterId = 3,
                            Alias = "Current downtime",
                            MaxValue = 1.1000000000000001,
                            MinValue = 0.90000000000000002,
                            Name = "Текущие простои",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 4,
                            Alias = "Quiet running",
                            MaxValue = 1.6499999999999999,
                            MinValue = 1.3500000000000001,
                            Name = "Тихий ход",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 5,
                            Alias = "The proportion of pellets",
                            MaxValue = 40.0,
                            MinValue = 25.0,
                            Name = "Доля окатышей в шихте",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 6,
                            Alias = "Share of sinter",
                            MaxValue = 75.0,
                            MinValue = 60.0,
                            Name = "Доля агломерата в шихте",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 7,
                            Alias = "Fe content",
                            MaxValue = 63.0,
                            MinValue = 52.0,
                            Name = "Содержание Fe в доменной шихте",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 8,
                            Alias = "Basicity  CaO/Sio2",
                            MaxValue = 1.1100000000000001,
                            MinValue = 0.91000000000000003,
                            Name = "Основность ЖРМ CaO/SiO2",
                            Unit = "-"
                        },
                        new
                        {
                            ParameterId = 9,
                            Alias = "Basicity  (CaO+MgO)/(SiO2)",
                            MaxValue = 1.3300000000000001,
                            MinValue = 1.0900000000000001,
                            Name = "Основность ЖРМ (CaO+MgO)/(SiO2)",
                            Unit = "-"
                        },
                        new
                        {
                            ParameterId = 10,
                            Alias = "Basicity (CaO+MgO)/(SiO2+Al2O3)",
                            MaxValue = 1.1100000000000001,
                            MinValue = 0.91000000000000003,
                            Name = "Основность ЖРМ (CaO+MgO)/(SiO2+Al2O3)",
                            Unit = "-"
                        },
                        new
                        {
                            ParameterId = 11,
                            Alias = "Ash in coke",
                            MaxValue = 13.0,
                            MinValue = 11.0,
                            Name = "Содержание золы в коксе",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 12,
                            Alias = "Moisture  in coke",
                            MaxValue = 5.0,
                            MinValue = 1.0,
                            Name = "Содержание влаги в коксе",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 13,
                            Alias = "Volatile  in coke",
                            MaxValue = 13.199999999999999,
                            MinValue = 10.800000000000001,
                            Name = "Содержание летучих в коксе",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 14,
                            Alias = "Coke  M25",
                            MaxValue = 94.599999999999994,
                            MinValue = 77.299999999999997,
                            Name = "Прочность кокса по М25",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 15,
                            Alias = "Abrasion to M10",
                            MaxValue = 8.9100000000000001,
                            MinValue = 7.29,
                            Name = "Истираемость кокса по М10",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 16,
                            Alias = "CSR",
                            MaxValue = 42.0,
                            MinValue = 34.0,
                            Name = "CSR",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 17,
                            Alias = "CRI",
                            MaxValue = 41.0,
                            MinValue = 33.0,
                            Name = "CRI",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 18,
                            Alias = "Gas consumption",
                            MaxValue = 150.0,
                            MinValue = 100.0,
                            Name = "Расход природного газа",
                            Unit = "м3/т чугуна"
                        },
                        new
                        {
                            ParameterId = 19,
                            Alias = "HotBlastO2",
                            MaxValue = 30.0,
                            MinValue = 21.0,
                            Name = "Содержание кислорода в дутье",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 20,
                            Alias = "TempHotBlast",
                            MaxValue = 1300.0,
                            MinValue = 900.0,
                            Name = "Температура горячего дутья",
                            Unit = "°С"
                        },
                        new
                        {
                            ParameterId = 21,
                            Alias = "TempKolGaz",
                            MaxValue = 350.0,
                            MinValue = 80.0,
                            Name = "Средняя температура колошникового газа",
                            Unit = "°С"
                        },
                        new
                        {
                            ParameterId = 22,
                            Alias = "Degree of CO",
                            MaxValue = 48.0,
                            MinValue = 39.0,
                            Name = "Степень использования СО",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 23,
                            Alias = "Degree of CO H2",
                            MaxValue = 9.9000000000000004,
                            MinValue = 8.0999999999999996,
                            Name = "Степень использования Н2",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 24,
                            Alias = "Temperature peripheral",
                            MaxValue = 792.0,
                            MinValue = 648.0,
                            Name = "Средняя температура периферийных газов, °С",
                            Unit = "°С"
                        },
                        new
                        {
                            ParameterId = 25,
                            Alias = "Irregularity of gas temperature",
                            MaxValue = 143.0,
                            MinValue = 117.0,
                            Name = "Окружная неравномерность температуры газа, °С",
                            Unit = "°С"
                        },
                        new
                        {
                            ParameterId = 26,
                            Alias = "Irregularities  top gas",
                            MaxValue = 165.0,
                            MinValue = 135.0,
                            Name = "Неравномерность T колошникового газа по газоотводам, °С",
                            Unit = "°С"
                        },
                        new
                        {
                            ParameterId = 27,
                            Alias = "Ratio  Tcp of peripheral to Tcp of gas",
                            MaxValue = 0.33000000000000002,
                            MinValue = 0.27000000000000002,
                            Name = "Отношение Tcр периферийных термопар к Tcр колошникового газа, ед",
                            Unit = "ед"
                        },
                        new
                        {
                            ParameterId = 28,
                            Alias = "Reftemperatures 4th row",
                            MaxValue = 330.0,
                            MinValue = 270.0,
                            Name = "Температура холодильников 4 ряд",
                            Unit = "°С"
                        },
                        new
                        {
                            ParameterId = 29,
                            Alias = "Theoretical  temperature",
                            MaxValue = 2100.0,
                            MinValue = 1900.0,
                            Name = "Теоретическая температура горения",
                            Unit = "°С"
                        },
                        new
                        {
                            ParameterId = 30,
                            Alias = "Si content in cast iron",
                            MaxValue = 1.0,
                            MinValue = 0.40000000000000002,
                            Name = "Содержание Si в чугуне",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 31,
                            Alias = "Index of the bottom temperature ",
                            MaxValue = 0.55000000000000004,
                            MinValue = 0.45000000000000001,
                            Name = "Индекс низа",
                            Unit = "ед."
                        },
                        new
                        {
                            ParameterId = 32,
                            Alias = "Index of the top of the temperature ",
                            MaxValue = 0.36299999999999999,
                            MinValue = 0.29699999999999999,
                            Name = "Индекс верха",
                            Unit = "ед."
                        },
                        new
                        {
                            ParameterId = 33,
                            Alias = "Basicity_1",
                            MaxValue = 1.1499999999999999,
                            MinValue = 0.98999999999999999,
                            Name = "Основность конечного шлака (CaO/(SiO2)",
                            Unit = "-"
                        },
                        new
                        {
                            ParameterId = 34,
                            Alias = "Basicity_2",
                            MaxValue = 1.375,
                            MinValue = 1.125,
                            Name = "Основность конечного шлака (CaO+MgO)/(SiO2)",
                            Unit = " -"
                        },
                        new
                        {
                            ParameterId = 35,
                            Alias = "Basicity_3",
                            MaxValue = 1.1000000000000001,
                            MinValue = 0.90000000000000002,
                            Name = "Основность конечного шлака (CaO+MgO)/(SiO2+Al2O3)",
                            Unit = " -"
                        },
                        new
                        {
                            ParameterId = 36,
                            Alias = "Sulfur distribution coefficient",
                            MaxValue = 0.5,
                            MinValue = 0.29999999999999999,
                            Name = "Коэффициент распределения серы",
                            Unit = "доли"
                        },
                        new
                        {
                            ParameterId = 37,
                            Alias = "Viscosity_1400",
                            MaxValue = 0.495,
                            MinValue = 0.40500000000000003,
                            Name = "Вязкость конечного шлака при 1400 °С",
                            Unit = "Па∙с"
                        },
                        new
                        {
                            ParameterId = 38,
                            Alias = "Viscosity_1500",
                            MaxValue = 0.40699999999999997,
                            MinValue = 0.33300000000000002,
                            Name = "Вязкость конечного шлака при 1500 °С",
                            Unit = "Па∙с"
                        },
                        new
                        {
                            ParameterId = 39,
                            Alias = "Viscosity_Tfin",
                            MaxValue = 0.253,
                            MinValue = 0.20699999999999999,
                            Name = "Вязкость конечного шлака при T конечной",
                            Unit = "Па∙с"
                        },
                        new
                        {
                            ParameterId = 40,
                            Alias = "Viscosity gradients at 1400–1500 °C",
                            MaxValue = 0.021999999999999999,
                            MinValue = 0.017999999999999999,
                            Name = "Градиенты вязкости шлака при 1400–1500 °С",
                            Unit = "Па∙с/°С"
                        },
                        new
                        {
                            ParameterId = 41,
                            Alias = "Slag viscosity gradients at 0.7–2.5 Pa∙s",
                            MaxValue = 0.099000000000000005,
                            MinValue = 0.081000000000000003,
                            Name = "Градиенты вязкости шлака при 0,7–2,5 Па∙с",
                            Unit = "Па∙с/°С"
                        },
                        new
                        {
                            ParameterId = 42,
                            Alias = "P drop tuyere - top",
                            MaxValue = 2.0,
                            MinValue = 1.0,
                            Name = "Перепад давления «фурмы – колошник»",
                            Unit = "атм"
                        },
                        new
                        {
                            ParameterId = 43,
                            Alias = "The degree  balancing by the gas flow",
                            MaxValue = 50.0,
                            MinValue = 40.0,
                            Name = "Степень уравновешивания шихты газовым потоком",
                            Unit = "%"
                        },
                        new
                        {
                            ParameterId = 44,
                            Alias = "Cold blast consumption",
                            MaxValue = 2896.3000000000002,
                            MinValue = 2369.6999999999998,
                            Name = "Расход холодного дутья",
                            Unit = "м3/мин"
                        },
                        new
                        {
                            ParameterId = 45,
                            Alias = "hot blast pressure",
                            MaxValue = 2.7829999999999999,
                            MinValue = 2.2770000000000001,
                            Name = "Давление горячего дутья, атм/(МПа)",
                            Unit = "атм/(МПа)"
                        },
                        new
                        {
                            ParameterId = 46,
                            Alias = "Gas T on the periphery",
                            MaxValue = 308.0,
                            MinValue = 252.0,
                            Name = "Температура газа по радиусу колошника на периферии",
                            Unit = "°С"
                        },
                        new
                        {
                            ParameterId = 47,
                            Alias = "Gas T  on the axis",
                            MaxValue = 302.5,
                            MinValue = 247.5,
                            Name = "Температура газа по радиусу колошника на оси",
                            Unit = "°С"
                        });
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.ParameterValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Npech")
                        .HasColumnType("int");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStampEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStampStart")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ParameterId");

                    b.ToTable("ParameterValues");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.Pech", b =>
                {
                    b.Property<int>("NPech")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("NPech");

                    b.ToTable("Pechi");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.SimpleCriterion", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AcceptableDelta")
                        .HasColumnType("float");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("IndicatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Npech")
                        .HasColumnType("int");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<double>("Rang")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("IndicatorId");

                    b.HasIndex("ParameterId");

                    b.ToTable("SimpleCriterions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 1,
                            ParameterId = 1,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 2,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 1,
                            ParameterId = 2,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 3,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 1,
                            ParameterId = 3,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 4,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 1,
                            ParameterId = 4,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 5,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 5,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 6,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 6,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 7,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 7,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 8,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 8,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 9,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 9,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 10,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 10,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 11,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 11,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 12,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 12,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 13,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 13,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 14,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 14,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 15,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 15,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 16,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 16,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 17,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 2,
                            ParameterId = 17,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 18,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 44,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 19,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 45,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 20,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 18,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 21,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 19,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 22,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 20,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 23,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 42,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 24,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 43,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 25,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 22,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 26,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 25,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 27,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 26,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 28,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 46,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 29,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 3,
                            ParameterId = 47,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 30,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 4,
                            ParameterId = 30,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 31,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 4,
                            ParameterId = 29,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 32,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 4,
                            ParameterId = 31,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 33,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 4,
                            ParameterId = 32,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 34,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 4,
                            ParameterId = 21,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 35,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 4,
                            ParameterId = 24,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 36,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 4,
                            ParameterId = 28,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 37,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 5,
                            ParameterId = 33,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 38,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 5,
                            ParameterId = 34,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 39,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 5,
                            ParameterId = 35,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 40,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 5,
                            ParameterId = 37,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 41,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 5,
                            ParameterId = 38,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 42,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 5,
                            ParameterId = 39,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 43,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 5,
                            ParameterId = 40,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 44,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 5,
                            ParameterId = 41,
                            Rang = 1.0
                        },
                        new
                        {
                            Id = 45,
                            AcceptableDelta = 0.0,
                            ActionType = 0,
                            IndicatorId = 5,
                            ParameterId = 36,
                            Rang = 1.0
                        });
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.ComplexCriterion", b =>
                {
                    b.HasOne("BFStabilityEvaluation.Models.Entities.Indicator", "Indicator")
                        .WithMany()
                        .HasForeignKey("IndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Indicator");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.ParameterValue", b =>
                {
                    b.HasOne("BFStabilityEvaluation.Models.Entities.Parameter", "Parameter")
                        .WithMany("ParameterValues")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.SimpleCriterion", b =>
                {
                    b.HasOne("BFStabilityEvaluation.Models.Entities.Indicator", "Indicator")
                        .WithMany("StabilitySignKriteria")
                        .HasForeignKey("IndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BFStabilityEvaluation.Models.Entities.Parameter", "Parameter")
                        .WithMany("StabilitySignKriteria")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Indicator");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.Indicator", b =>
                {
                    b.Navigation("StabilitySignKriteria");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Entities.Parameter", b =>
                {
                    b.Navigation("ParameterValues");

                    b.Navigation("StabilitySignKriteria");
                });
#pragma warning restore 612, 618
        }
    }
}
