// <auto-generated />
using System;
using BFStabilityEvaluation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BFStabilityEvaluation.Migrations
{
    [DbContext(typeof(PraktiContext))]
    [Migration("20220725182135_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BFStabilityEvaluation.Models.Parameter", b =>
                {
                    b.Property<int>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Unit")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ParameterId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.ParameterValue", b =>
                {
                    b.Property<int>("Npech")
                        .HasColumnType("int");

                    b.Property<int>("IdParam")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int>("IdPValue")
                        .HasColumnType("int");

                    b.Property<int?>("ParameterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Npech", "IdParam", "Period");

                    b.HasIndex("ParameterId");

                    b.ToTable("ParameterValues");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.StabilitySign", b =>
                {
                    b.Property<int>("StabSignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("LimitDanger")
                        .HasColumnType("float");

                    b.Property<double>("LimitWarning")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StabSignId");

                    b.ToTable("StabilitySigns");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.StabilitySignKriterium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AcceptableDelta")
                        .HasColumnType("float");

                    b.Property<double>("ActionType")
                        .HasColumnType("float");

                    b.Property<int?>("IdstabPokazNavigationStabSignId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Npech")
                        .HasColumnType("int");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<double>("Rang")
                        .HasColumnType("float");

                    b.Property<int>("StabSignId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("IdstabPokazNavigationStabSignId");

                    b.HasIndex("ParameterId");

                    b.ToTable("StabilitySignKriteria");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.ParameterValue", b =>
                {
                    b.HasOne("BFStabilityEvaluation.Models.Parameter", "Parameter")
                        .WithMany("ParameterValues")
                        .HasForeignKey("ParameterId");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.StabilitySignKriterium", b =>
                {
                    b.HasOne("BFStabilityEvaluation.Models.StabilitySign", "IdstabPokazNavigation")
                        .WithMany("StabilitySignKriteria")
                        .HasForeignKey("IdstabPokazNavigationStabSignId");

                    b.HasOne("BFStabilityEvaluation.Models.Parameter", "Parameter")
                        .WithMany("StabilitySignKriteria")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdstabPokazNavigation");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.Parameter", b =>
                {
                    b.Navigation("ParameterValues");

                    b.Navigation("StabilitySignKriteria");
                });

            modelBuilder.Entity("BFStabilityEvaluation.Models.StabilitySign", b =>
                {
                    b.Navigation("StabilitySignKriteria");
                });
#pragma warning restore 612, 618
        }
    }
}
